# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class TaskStatus(str, enum.Enum):
    TODO = "TODO"
    IN_PROGRESS = "IN_PROGRESS"
    COMPLETED = "COMPLETED"
    CANCELLED = "CANCELLED"

    def visit(
        self,
        todo: typing.Callable[[], T_Result],
        in_progress: typing.Callable[[], T_Result],
        completed: typing.Callable[[], T_Result],
        cancelled: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is TaskStatus.TODO:
            return todo()
        if self is TaskStatus.IN_PROGRESS:
            return in_progress()
        if self is TaskStatus.COMPLETED:
            return completed()
        if self is TaskStatus.CANCELLED:
            return cancelled()
